{"version":3,"sources":["Components/Drawer.js","firebase.js","Components/Dashboard/main.js","Components/Statistics/statistics.js","Ui.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","backgroundColor","drawer","Object","defineProperty","breakpoints","up","width","flexShrink","appBar","marginLeft","concat","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","ResponsiveDrawer","props","container","classes","useTheme","_React$useState","React","useState","_React$useState2","slicedToArray","mobileOpen","setMobileOpen","handleDrawerToggle","react_default","a","createElement","className","style","color","Divider","Avatar","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","onClick","Menu_default","Hidden","smUp","implementation","Drawer","variant","anchor","direction","open","onClose","paper","ModalProps","keepMounted","react_router_dom","to","xsDown","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Dashboard","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","target","userName","value","onSubmit","preventDefault","firestore","collection","add","state","amount","purchase","users","viewers","date","id","TextField","label","type","name","margin","placeholder","fullWidth","InputLabelProps","shrink","Button","size","Component","Statistics","dataSales","_this2","onSnapshot","querySnapshot","forEach","doc","_doc$data","data","dataComplete","userNames","push","CardActions","UI","children","App","Ui","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.70b91896.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Hidden from '@material-ui/core/Hidden'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Avatar from '@material-ui/core/Avatar'\r\n\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\r\nimport { Link } from 'react-router-dom'\r\nimport '../style.css'\r\n\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    backgroundColor: '#222d32'\r\n    \r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0\r\n    }\r\n  },\r\n  appBar: {\r\n    marginLeft: drawerWidth,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`\r\n    }\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3)\r\n  }\r\n}))\r\n\r\nexport default function ResponsiveDrawer (props) {\r\n  const { container } = props\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n  const [mobileOpen, setMobileOpen] = React.useState(false)\r\n\r\n  function handleDrawerToggle () {\r\n    setMobileOpen(!mobileOpen)\r\n  }\r\n\r\n  const drawer = (\r\n    <div>\r\n\r\n      <div className={classes.toolbar} \r\n      style = {{\r\n        backgroundColor:'#3c8dbc',\r\n        color: 'white'\r\n       }}\r\n      />  \r\n      \r\n      <Divider/> \r\n      <div className='user_content'> \r\n        <p>Usuario Apellido</p>\r\n        <Avatar className=''>NN</Avatar>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position='fixed' className={classes.appBar}\r\n      style = {{\r\n        backgroundColor: '#367fa9'\r\n      }}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color='inherit'\r\n            aria-label='Open drawer'\r\n            edge='start'\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label='Mailbox folders'>\r\n        <Hidden smUp implementation='css'>\r\n          <Drawer\r\n          style = {{\r\n            backgroundColor: '#1e2a2e'\r\n          }}\r\n            container={container}\r\n            variant='temporary'\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n            <Divider />\r\n            <Link className='nav-link home' to='/'>Dashboard</Link>\r\n            <Divider />\r\n            <Link className='nav-link contact' to='/Stats'>Estadísticas</Link>\r\n            <Divider />\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation='css'>\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper\r\n            }}\r\n            variant='permanent'\r\n            open\r\n          >\r\n            {drawer}\r\n            <Divider />\r\n            <Link className='nav-link home' to='/'>Dashboard</Link>\r\n            <Divider />\r\n            <Link className='nav-link contact' to='/Stats'>Estadísticas</Link>\r\n            <Divider />\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n\r\n    </div>\r\n  )\r\n}","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA5j2VAR7Y_XWjxEg3eIqpPuHDptwGTyfU\",\r\n    authDomain: \"arkano-dashboard.firebaseapp.com\",\r\n    databaseURL: \"https://arkano-dashboard.firebaseio.com\",\r\n    projectId: \"arkano-dashboard\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"855448696253\",\r\n    appId: \"1:855448696253:web:a328e9b562f1a344\"\r\n  };\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig)\r\nexport default firebase","import React, { Component } from 'react'\r\nimport { Button, TextField } from '@material-ui/core'\r\nimport firebase from '../../firebase'\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            userName: '',\r\n            amount: '',\r\n            purchase: '',\r\n            users: '',\r\n            viewers: '',\r\n            date: ''\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.userName]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n        const db = firebase.firestore()\r\n        db.collection('sales').add({\r\n            userName: this.state.userName,\r\n            amount: this.state.amount,\r\n            purchase: this.state.purchase,\r\n            users: this.state.users,\r\n            viewers: this.state.viewers,\r\n            date: this.state.date\r\n        })\r\n        this.setState({\r\n            userName: '',\r\n           amount: '',\r\n            purchase: '',\r\n            users: '',\r\n            viewers: '',\r\n            date: ''\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <\r\n        form id='form_dashboard' >\r\n                <   \r\n            \r\n                    TextField id='outlined-full-width'\r\n                    label='Campo obligatoro*'\r\n                    type='text'\r\n                    name='names'\r\n                    onChange={\r\n                        this.onChange\r\n                    }\r\n                    value={\r\n                        this.state.userName\r\n                    }\r\n                    style={\r\n                        {\r\n                            margin: 8\r\n                        }\r\n                    }\r\n                    placeholder='Nombre'\r\n                    fullWidth margin='normal'\r\n                    variant='outlined'\r\n                    InputLabelProps={\r\n                        {\r\n                            shrink: true,\r\n                        }\r\n                    }\r\n                /> <\r\n                    TextField id='outlined-full-width'\r\n                    label='Campo obligatoro*'\r\n                    type='number'\r\n                    name='amount'\r\n                    onChange={\r\n                        this.onChange\r\n                    }\r\n                    value={\r\n                        this.state.amount\r\n                    }\r\n                    style={\r\n                        {\r\n                            margin: 8\r\n                        }\r\n                    }\r\n                    placeholder='Cantidad de compras'\r\n                    fullWidth margin='normal'\r\n                    variant='outlined'\r\n                    InputLabelProps={\r\n                        {\r\n                            shrink: true,\r\n                        }\r\n                    }\r\n                /> <\r\n                    TextField id='outlined-full-width'\r\n                    label='Campo obligatoro*'\r\n                    type='number'\r\n                    name='purchase'\r\n                    onChange={\r\n                        this.onChange\r\n                    }\r\n                    value={\r\n                        this.state.purchase\r\n                    }\r\n                    style={\r\n                        {\r\n                            margin: 8\r\n                        }\r\n                    }\r\n                    placeholder='Incremento de compras'\r\n                    fullWidth margin='normal'\r\n                    variant='outlined'\r\n                    InputLabelProps={\r\n                        {\r\n                            shrink: true,\r\n                        }\r\n                    }\r\n                /> <\r\n                    TextField id='outlined-full-width'\r\n                    label='Campo obligatoro*'\r\n                    type='number'\r\n                    name='users'\r\n                    onChange={\r\n                        this.onChange\r\n                    }\r\n                    value={\r\n                        this.state.users\r\n                    }\r\n                    style={\r\n                        {\r\n                            margin: 8\r\n                        }\r\n                    }\r\n                    placeholder='Nuevos usuarios'\r\n                    fullWidth margin='normal'\r\n                    variant='outlined'\r\n                    InputLabelProps={\r\n                        {\r\n                            shrink: true,\r\n                        }\r\n                    }\r\n                /> <\r\n                    TextField id='outlined-full-width'\r\n                    label='Campo obligatoro*'\r\n                    type='number'\r\n                    name='viewers'\r\n                    onChange={\r\n                        this.onChange\r\n                    }\r\n                    value={\r\n                        this.state.viewers\r\n                    }\r\n                    style={\r\n                        {\r\n                            margin: 8\r\n                        }\r\n                    }\r\n                    placeholder='Nuevas vistas'\r\n                    fullWidth margin='normal'\r\n                    variant='outlined'\r\n                    InputLabelProps={\r\n                        {\r\n                            shrink: true,\r\n                        }\r\n                    }\r\n                /> <\r\n                    TextField id='outlined-full-width'\r\n                    label='Campo obligatorio*'\r\n                    type='date'\r\n                    name='date'\r\n                    onChange={\r\n                        this.onChange\r\n                    }\r\n                    value={\r\n                        this.state.date\r\n                    }\r\n                    style={\r\n                        {\r\n                            margin: 8\r\n                        }\r\n                    }\r\n                    placeholder='Fecha'\r\n                    fullWidth margin='normal'\r\n                    variant='outlined'\r\n                    InputLabelProps={\r\n                        {\r\n                            shrink: true,\r\n                        }\r\n                    }\r\n                /> <Button size='small' className= \"send\" onClick={\r\n                        this.onSubmit\r\n                    }\r\n                   style = {{\r\n                       backgroundColor: '#3c8dbc',\r\n                       \r\n                      \r\n                   }} >\r\n                    Enviar </Button> </form>\r\n                  )\r\n                }\r\n              }\r\n              \r\n  export default Dashboard;","import React, { Component } from 'react'\r\nimport {  CardActions } from '@material-ui/core'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport firebase from '../../firebase'\r\nconst firestore = firebase.firestore()\r\n\r\nclass Statistics extends Component  {\r\n    constructor (props) {\r\n      super(props)\r\n      this.state = ({\r\n        dataSales: []\r\n      })\r\n    }\r\n  \r\n    componentWillMount () {\r\n      firestore.collection('sales').onSnapshot((querySnapshot) =>{\r\n        const dataSales = []\r\n        querySnapshot.forEach((doc) => {\r\n          const { userNames, amount, purchase, users, viewers, date } = doc.data()\r\n          let dataComplete = { userNames, amount, purchase, users, viewers, date  }\r\n          dataSales.push(dataComplete)\r\n        })\r\n        this.setState({ dataSales })\r\n  \r\n      })\r\n    }\r\n  render () {\r\n    const {dataSales} = this.state\r\n\r\n    return (\r\n      <div className='card_container'>\r\n     \r\n        <h1>Dashboard</h1>\r\n        <p1>Estadística</p1>\r\n      \r\n\r\n         <div >\r\n      <div className=\"card_purchase\" >\r\n  <div className=\"column\">\r\n    <div className=\"card\" \r\n    style = {{\r\n      backgroundColor: '#00c0ef',\r\n      color: 'white'\r\n    }}\r\n    >\r\n      <h3>150</h3>\r\n      <p>NUEVAS COMPRAS</p>\r\n      <CardActions>\r\n            <Button size='small'>Más info</Button>\r\n          </CardActions>\r\n    </div>\r\n  </div>\r\n    </div>\r\n    </div>\r\n\r\n\r\n\r\n    <div >\r\n      <div className=\"card_amount\" >\r\n  <div className=\"column\">\r\n    <div className=\"card\" \r\n    style = {{\r\n      backgroundColor: 'seagreen',\r\n      color: 'white'\r\n    }}\r\n    >\r\n      <h3>53%</h3>\r\n      <p> incremento de compras</p>\r\n      <CardActions>\r\n            <Button size='small'\r\n            >Más info</Button>\r\n          </CardActions>\r\n    </div>\r\n  </div>\r\n    </div>\r\n    </div>\r\n\r\n    <div >\r\n      <div className=\"card_users\" >\r\n  <div className=\"column\">\r\n    <div className=\"card\" \r\n    style = {{\r\n      backgroundColor: '#ffb400',\r\n      color: 'white'\r\n    }}\r\n    >\r\n      <h3>44</h3>\r\n      <p> Nuevos Usuarios</p>\r\n      <CardActions>\r\n            <Button size='small'>Más info</Button>\r\n          </CardActions>\r\n    </div>\r\n  </div>\r\n    </div>\r\n    </div>\r\n\r\n    <div >\r\n      <div className=\"ncard_viewers\" >\r\n  <div className=\"column\">\r\n    <div className=\"card\" \r\n    style = {{\r\n      backgroundColor: '#dd4b39',\r\n      color: 'white'\r\n    }}\r\n    >\r\n      <h3>65</h3>\r\n      <p> Nuevas ventas</p>\r\n      <CardActions>\r\n            <Button size='small'>Más info</Button>\r\n          </CardActions>\r\n    </div>\r\n  </div>\r\n    </div>\r\n    </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Statistics;\r\n\r\n\r\n","import React from 'react'\r\nimport Drawer from './Components/Drawer'\r\n\r\nclass UI extends React.Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <Drawer/>\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UI;","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport React from 'react'\nimport Drawer from './Components/Drawer'\nimport Dashboard from './Components/Dashboard/main'\nimport Statistics from './Components/Statistics/statistics'\nimport Ui from './Ui'\n\nclass App extends React.Component {\n  render () {\n    return (\n      <Router>\n        <Ui>\n          <Drawer/>\n          <Switch className='container'>\n            <Route exact path='/' component={Dashboard} />\n            <Route exact path='/Stats' component={Statistics} />\n          </Switch>\n        </Ui>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}